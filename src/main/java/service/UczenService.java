package service;

import domain.Klasa;
import domain.Uczen;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class UczenService {

    public static final String URL = "jdbc:hsqldb:hsql://localhost/";

    public static final String CREATE_UCZEN_TABLE = "CREATE TABLE Uczen(id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY , " +
            "imie varchar(20), nazwisko varchar(20), data_urodzenia DATE, klasa_id BIGINT , " +
            "FOREIGN KEY (klasa_id) REFERENCES klasa(id))";

    public static final String ADD_UCZEN = "INSERT INTO uczen(imie, nazwisko, data_urodzenia, klasa_id) VALUES(?, ?, ?, ?)";
    public static final String UPDATE_UCZEN = "UPDATE uczen SET imie=?, nazwisko=?, data_urodzenia=?, klasa_id=?";
    public static final String DELETE_UCZEN = "DELETE FROM uczen WHERE id=?";
    public static final String GET_ALL = "SELECT uczen.id, imie, nazwisko, data_urodzenia, klasa_id, nr, oddzial " +
            "FROM uczen JOIN klasa ON klasa_id = klasa.id";
    public static final String DELETE_ALL = "DELETE FROM uczen";


    private Connection connection;

    public UczenService() {
        try {
            connection = DriverManager.getConnection(URL);
            if(!checkIfTableExists()) {
                connection.createStatement().executeUpdate(CREATE_UCZEN_TABLE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }

    private Boolean checkIfTableExists() {
        try {
            Statement statement = connection.createStatement();
            ResultSet rs = connection.getMetaData().getTables(null, null, null,
                    null);

            while (rs.next()) {
                if ("Uczen".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
                    return true;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;


    }

    public Uczen zapisz(Uczen uczen) {

        try {
            String stmt = "";
            boolean isUpdated = false;
            if(uczen.getId() != null) {
                stmt = UPDATE_UCZEN;
                isUpdated = true;
            } else {
                stmt = ADD_UCZEN;
            }
            PreparedStatement addUczenStatement = connection.prepareStatement(stmt, Statement.RETURN_GENERATED_KEYS);
            addUczenStatement.setString(1, uczen.getImie());
            addUczenStatement.setString(2, uczen.getNazwisko());
            addUczenStatement.setDate(3, uczen.getDataUrodzenia());
            addUczenStatement.setLong(4, uczen.getKlasa().getId());
            addUczenStatement.executeUpdate();
            if(isUpdated) {
                return uczen;
            }
            ResultSet generatedKeys = null;
            try {
                generatedKeys = addUczenStatement.getGeneratedKeys();
                if (generatedKeys.next()) {
                    uczen.setId(generatedKeys.getLong(1));
                }
            } finally {
                if(generatedKeys != null) {
                    generatedKeys.close();
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
        return uczen;
    }

    public void usun(Uczen uczen) throws Exception {
        if(uczen.getId() == null) {
            throw new Exception("Podany uczen nie jest zapisany w bazie.");
        }
        try {
            PreparedStatement usunStatement = connection.prepareStatement(DELETE_UCZEN);
            usunStatement.setLong(1, uczen.getId());
            usunStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void usunWszystkich() {
        try {
            connection.prepareStatement(DELETE_ALL).executeUpdate();
        } catch (SQLException e) {}
    }

    public List<Uczen> pobierzWszystkich() {
        try {
            ResultSet rs = connection.prepareStatement(GET_ALL).executeQuery();
            List<Uczen> uczniowie = new ArrayList<Uczen>();
            while (rs.next()) {
                Uczen uczen = new Uczen(rs.getString("imie"), rs.getString("nazwisko"), rs.getDate("data_urodzenia"));
                uczen.setId(rs.getLong("id"));
                Klasa klasa = new Klasa(rs.getInt("nr"), rs.getString("oddzial").charAt(0));
                klasa.setId(rs.getLong("klasa_id"));
                uczen.setKlasa(klasa);
                uczniowie.add(uczen);
            }
            return uczniowie;
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }

    public void close() {
        try {
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
